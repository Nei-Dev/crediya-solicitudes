server:
  port: "${PORT:8080}"
spring:
  application:
    name: "solicitudes"
  devtools:
    add-properties: false
adapters:
  r2dbc:
    host: "${DB_HOST:localhost}"
    port: "${DB_PORT:5441}"
    database: "${DB_NAME:solicitudes_db}"
    schema: "${DB_SCHEMA:public}"
    username: "${DB_USER:postgres}"
    password: "${DB_PASSWORD:postgres}"
logging:
#  pattern:
#    level: "%5p [correlationId=%X{correlationId}]"
  level:
    com.crediya: "${LOG_LEVEL:INFO}"
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
adapter:
  restconsumer:
    timeout: 5000
    url: "${AUTH_URL:http://localhost:8080/api}"
    path:
      me: /v1/auth/me
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
app:
  paths:
    credit-application:
      createApplication: /api/v1/credit-application
      listCreditApplication: /api/v1/credit-application